// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  accounts Account[] 
  projects Projects[]
}

model Account {
  id                String  @id @default(cuid())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}


model Projects{
  id              Int   @id @default(autoincrement())
  name            String
  url             String
  userId          Int 
  discordEnabled  Boolean @default(false)
  discordUrl      String @default("")
  user            User @relation(fields: [userId], references: [id] )
  ping            Ping[]
}

model Ping{
  id         Int   @id @default(autoincrement())
  projectId  Int  
  project    Projects  @relation(fields: [projectId], references: [id])
  status     String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @default(now())

}
